# @B11_demo_bot
import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from kb4 import *
from aiogram.types import ReplyKeyboardRemove


bot = Bot(token='6288021917:AAHgqNbuWdQxZzXyph3LU36f3n5E-mGYl3w', parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)


@dp.message_handler(commands='start')
async def menu_bot(message: types.Message):
    await message.answer('–ú–ï–ù–Æ', reply_markup=get_simple_kb())


@dp.message_handler(Text(equals='–ù–∞–∑–∞–¥'))
async def menu_bot(message: types.Message):
    await message.answer('–ú–ï–ù–Æ', reply_markup=get_simple_kb())


@dp.message_handler(Text(equals='–ó–∞–∫—Ä—ã—Ç—å'))
async def menu_bot(message: types.Message):
    await message.answer('–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ', reply_markup=ReplyKeyboardRemove())


@dp.message_handler(Text(equals='–ó–∞–≤—Ç—Ä–∞–∫'))
async def menu_bot(message: types.Message):
    await message.answer('–ó–ê–í–¢–†–ê–ö:', reply_markup=get_simple_kb1())


@dp.message_handler(Text(equals='–û–±–µ–¥'))
async def menu_bot(message: types.Message):
    await message.answer('–û–ë–ï–î', reply_markup=get_simple_kb2())


@dp.message_handler(Text(equals='–£–∂–∏–Ω'))
async def menu_bot(message: types.Message):
    await message.answer('–£–ñ–ò–ù', reply_markup=get_simple_kb3())


@dp.message_handler(Text(equals='–ù–∞–∑–∞–¥üòÑ'))
async def menu_bot(message: types.Message):
    await message.answer('–ó–∞–≤—Ç—Ä–∞–∫', reply_markup=get_simple_kb1())


@dp.message_handler(Text(equals='–ù–∞–∑–∞–¥üòâ'))
async def menu_bot(message: types.Message):
    await message.answer('–û–±–µ–¥', reply_markup=get_simple_kb2())


@dp.message_handler(Text(equals='–ù–∞–∑–∞–¥üòé'))
async def menu_bot(message: types.Message):
    await message.answer('–£–∂–∏–Ω', reply_markup=get_simple_kb3())


@dp.message_handler(Text(equals='–ö–∞—à–∞ –æ–≤—Å—è–Ω–∞—è'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_1())


@dp.message_handler(Text(equals='–ß–∞–π —Å —Å–∞—Ö–∞—Ä–æ–º'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_2())


@dp.message_handler(Text(equals='–ë–∞—Ç–æ–Ω'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_3())


@dp.message_handler(Text(equals='–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_4())


@dp.message_handler(Text(equals='–í–∏–Ω–µ–≥—Ä–µ—Ç –æ–≤–æ—â–Ω–æ–π'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_5())


@dp.message_handler(Text(equals='–†–∞—Å—Å–æ–ª—å–Ω–∏–∫ –¥–æ–º–∞—à–Ω–∏–π'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_6())


@dp.message_handler(Text(equals='–†—ã–±–∞ –æ—Ç–≤–∞—Ä–Ω–∞—è'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_7())


@dp.message_handler(Text(equals='–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –æ—Ç–≤–∞—Ä–Ω–æ–π'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_8())


@dp.message_handler(Text(equals='–°–æ–∫ –ø–µ—Ä—Å–∏–∫–æ–≤—ã–π'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_9())


@dp.message_handler(Text(equals='–•–ª–µ–± –ø—à–µ–Ω–∏—á–Ω—ã–π'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_10())


@dp.message_handler(Text(equals='–°–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∂–µ–π –∫–∞–ø—É—Å—Ç—ã'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_11())


@dp.message_handler(Text(equals='–ü–ª–æ–≤ –∏–∑ —Å–≤–∏–Ω–∏–Ω—ã'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_12())


@dp.message_handler(Text(equals='–ß–∞–π'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_13())


@dp.message_handler(Text(equals='–•–ª–µ–±'))
async def menu_bot(message: types.Message):
    await message.answer('–¶–µ–Ω–∞', reply_markup=price_14())


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
